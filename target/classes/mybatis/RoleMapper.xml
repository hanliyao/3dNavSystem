<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.litop.motorroom.db.mapper.RoleMapper" >
  <resultMap id="role" type="com.litop.motorroom.db.bean.Role" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, name, status, remark, createTime, updateTime
  </sql>
  <select id="getAll" parameterType="java.lang.Integer" resultMap="role">
    select * from lt_role
  </select>
  <select id="selectByPrimaryKey" resultMap="role" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from lt_role
    where id = #{id,jdbcType=SMALLINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lt_role
    where id = #{id,jdbcType=SMALLINT}
  </delete>
  <insert id="insert" parameterType="com.litop.motorroom.db.bean.Role" >
    insert into lt_role (id, name, status,
    remark, createTime, updateTime
    )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER},
    #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.litop.motorroom.db.bean.Role" >
    insert into lt_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.litop.motorroom.db.bean.Role" >
    update lt_role
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=SMALLINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.litop.motorroom.db.bean.Role" >
    update lt_role
    set name = #{name,jdbcType=VARCHAR},
    status = #{status,jdbcType=INTEGER},
    remark = #{remark,jdbcType=VARCHAR},
    updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=SMALLINT}
  </update>



  <select id="getCounts" parameterType="map" resultType="java.lang.Integer">
    select count(*) from lt_role
    <where>
      status=1
      <if test="name"> and moduleName like CONCAT('%',#{name},'%')</if>
    </where>

  </select>

  <!-- 分页查询 -->
  <select id="selectRoleListPage" parameterType="map" resultMap="role">
    select * from lt_role
    <where>
      status=1
      <if test="name"> and moduleName like CONCAT('%',#{name},'%')</if>
    </where>
    ORDER BY id DESC limit #{offset},#{pagesize}
  </select>


</mapper>